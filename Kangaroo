#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() 
{
    int32_t x[2],v[2];
    cin>>x[0]>>v[0]>>x[1]>>v[1];                    
    int initial_distance,initial_speed;
    bool flag=false;
    
    
    initial_distance=(x[0]>x[1]?x[0]-x[1]:x[1]-x[0]);                           //two variables are always +ve
    initial_speed=(v[0]>v[1]?v[0]-v[1]:v[1]-v[0]);                              //
    
    
    if( initial_speed ==0 && x[0]!=x[1])
        {
                                                                            //to avoid zeros while % operation
        }
    else if(initial_distance%initial_speed==0)
        {
            if((!(x[0]>x[1]&&v[0]>v[1]))&& (!(x[0]<x[1]&&v[0]<v[1])))         //if the back kango has slower speed (to avoid)
            {
                cout<<"YES"<<endl;
                flag=true;   
            }
        }
     
    if (flag==false)
        cout<<"NO"<<endl;
  
}
